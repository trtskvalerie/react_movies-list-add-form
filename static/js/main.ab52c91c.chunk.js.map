{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","titleIsInvalid","setTitleIsInvalid","imgUrlIsInvalid","setImgUrlIsInvalid","imdbUrlIsInvalid","setImdbUrlIsInvalid","imdbIdIsInvalid","setImdbIdIsInvalid","titleIsDirty","setTitleIsDirty","imgUrlIsDirty","setImgUrlIsDirty","imdbUrlIsDirty","setImdbUrlIsDirty","imdbIdIsDirty","setImdbIdIsDirty","urlRegex","RegExp","onSubmit","event","preventDefault","newMovie","type","id","name","value","placeholder","onBlur","onChange","target","match","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"2vEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,cCJfC,G,MAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,EAA0BC,mBAAS,IAAnC,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAAsCD,mBAAS,IAA/C,mBAAOd,EAAP,KAAoBgB,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAOb,EAAP,KAAegB,EAAf,KACA,EAA8BH,mBAAS,IAAvC,mBAAOZ,EAAP,KAAgBgB,EAAhB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOH,EAAP,KAAeQ,EAAf,KAEA,EAA4CL,oBAAS,GAArD,mBAAOM,EAAP,KAAuBC,EAAvB,KACA,EAA8CP,oBAAS,GAAvD,mBAAOQ,EAAP,KAAwBC,EAAxB,KACA,EAAgDT,oBAAS,GAAzD,mBAAOU,EAAP,KAAyBC,EAAzB,KACA,EAA8CX,oBAAS,GAAvD,mBAAOY,EAAP,KAAwBC,EAAxB,KAEA,EAAwCb,oBAAS,GAAjD,mBAAOc,EAAP,KAAqBC,EAArB,KACA,EAA0Cf,oBAAS,GAAnD,mBAAOgB,EAAP,KAAsBC,EAAtB,KACA,EAA4CjB,oBAAS,GAArD,mBAAOkB,EAAP,KAAuBC,EAAvB,KACA,EAA0CnB,oBAAS,GAAnD,oBAAOoB,GAAP,MAAsBC,GAAtB,MAEMC,GAAW,IAAIC,OAAO,sKAE5B,OACE,uBACElC,UAAU,YACVmC,SAAU,SAACC,GACTA,EAAMC,iBAEN,IAAMC,EAAW,CACf1C,QACAC,cACAC,SACAC,UACAS,UAGFI,EAAS,IACTC,EAAe,IACfC,EAAU,IACVC,EAAW,IACXC,EAAU,IAEVN,EAAM4B,IAnBV,UAsBE,gCACE,uBACEC,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,MAAO9C,EACP+C,YAAY,QACZC,OAAQ,WACDnB,GACHC,GAAgB,GAGb9B,GACHsB,GAAkB,IAGtB2B,SAAU,SAACT,GACTlB,GAAkB,GAClBN,EAASwB,EAAMU,OAAOJ,UAGzBjB,GAAgBR,GAAkB,mBAAGjB,UAAU,mBAAb,qCAGrC,8BACE,uBACEuC,KAAK,OACLC,GAAG,cACHC,KAAK,cACLC,MAAO7C,EACP8C,YAAY,cACZE,SAAU,SAACT,GACTvB,EAAeuB,EAAMU,OAAOJ,YAKlC,gCACE,uBACEH,KAAK,OACLC,GAAG,SACHC,KAAK,SACLC,MAAO5C,EACP6C,YAAY,YACZC,OAAQ,WACDjB,GACHC,GAAiB,GAGd9B,EAAOiD,MAAMd,KAChBb,GAAmB,IAGvByB,SAAU,SAACT,GACThB,GAAmB,GACnBN,EAAUsB,EAAMU,OAAOJ,UAG1Bf,GAAiBR,GAAmB,mBAAGnB,UAAU,mBAAb,yCAGvC,gCACE,uBACEuC,KAAK,OACLC,GAAG,UACHC,KAAK,UACLC,MAAO3C,EACP4C,YAAY,WACZC,OAAQ,WACDf,GACHC,GAAkB,GAGf/B,EAAQgD,MAAMd,KACjBX,GAAoB,IAGxBuB,SAAU,SAACT,GACTd,GAAoB,GACpBP,EAAWqB,EAAMU,OAAOJ,UAG3Bb,GAAkBR,GAAoB,mBAAGrB,UAAU,mBAAb,yCAGzC,gCACE,uBACEuC,KAAK,OACLC,GAAG,SACHC,KAAK,SACLC,MAAOlC,EACPmC,YAAY,UACZC,OAAQ,WACDb,IACHC,IAAiB,GAGdxB,GACHgB,GAAmB,IAGvBqB,SAAU,SAACT,GACTZ,GAAmB,GACnBR,EAAUoB,EAAMU,OAAOJ,UAG1BX,IAAiBR,GAAmB,mBAAGvB,UAAU,mBAAb,wCAGvC,wBACEuC,KAAK,SACLS,SAAU/B,GACLE,GACAI,GACAF,EALP,4B,OCxJO4B,G,MAAgB,WAC3B,MAA4BtC,mBAAS,YAAIuC,IAAzC,mBAAO7C,EAAP,KAAe8C,EAAf,KAMA,OACE,sBAAKnD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,sBAAKL,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,uBACA,cAAC,EAAD,CACEU,MAZS,SAACH,GAChB4C,EAAU,GAAD,mBAAK9C,GAAL,CAAaE,gBCP1B6C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ab52c91c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [titleIsInvalid, setTitleIsInvalid] = useState(true);\n  const [imgUrlIsInvalid, setImgUrlIsInvalid] = useState(true);\n  const [imdbUrlIsInvalid, setImdbUrlIsInvalid] = useState(true);\n  const [imdbIdIsInvalid, setImdbIdIsInvalid] = useState(true);\n\n  const [titleIsDirty, setTitleIsDirty] = useState(false);\n  const [imgUrlIsDirty, setImgUrlIsDirty] = useState(false);\n  const [imdbUrlIsDirty, setImdbUrlIsDirty] = useState(false);\n  const [imdbIdIsDirty, setImdbIdIsDirty] = useState(false);\n\n  const urlRegex = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w_-]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n  return (\n    <form\n      className=\"add-movie\"\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        const newMovie = {\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId,\n        };\n\n        setTitle('');\n        setDescription('');\n        setImgUrl('');\n        setImdbUrl('');\n        setImdbId('');\n\n        onAdd(newMovie);\n      }}\n    >\n      <div>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          placeholder=\"Title\"\n          onBlur={() => {\n            if (!titleIsDirty) {\n              setTitleIsDirty(true);\n            }\n\n            if (!title) {\n              setTitleIsInvalid(true);\n            }\n          }}\n          onChange={(event) => {\n            setTitleIsInvalid(false);\n            setTitle(event.target.value);\n          }}\n        />\n        {titleIsDirty && titleIsInvalid && <p className=\"add-movie__error\">Please enter a title</p>}\n      </div>\n\n      <div>\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          value={description}\n          placeholder=\"Description\"\n          onChange={(event) => {\n            setDescription(event.target.value);\n          }}\n        />\n      </div>\n\n      <div>\n        <input\n          type=\"text\"\n          id=\"imgUrl\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"Image URL\"\n          onBlur={() => {\n            if (!imgUrlIsDirty) {\n              setImgUrlIsDirty(true);\n            }\n\n            if (!imgUrl.match(urlRegex)) {\n              setImgUrlIsInvalid(true);\n            }\n          }}\n          onChange={(event) => {\n            setImgUrlIsInvalid(false);\n            setImgUrl(event.target.value);\n          }}\n        />\n        {imgUrlIsDirty && imgUrlIsInvalid && <p className=\"add-movie__error\">Please enter a valid URL</p>}\n      </div>\n\n      <div>\n        <input\n          type=\"text\"\n          id=\"imdbUrl\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"IMDB URL\"\n          onBlur={() => {\n            if (!imdbUrlIsDirty) {\n              setImdbUrlIsDirty(true);\n            }\n\n            if (!imdbUrl.match(urlRegex)) {\n              setImdbUrlIsInvalid(true);\n            }\n          }}\n          onChange={(event) => {\n            setImdbUrlIsInvalid(false);\n            setImdbUrl(event.target.value);\n          }}\n        />\n        {imdbUrlIsDirty && imdbUrlIsInvalid && <p className=\"add-movie__error\">Please enter a valid URL</p>}\n      </div>\n\n      <div>\n        <input\n          type=\"text\"\n          id=\"imdbId\"\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"IMDB ID\"\n          onBlur={() => {\n            if (!imdbIdIsDirty) {\n              setImdbIdIsDirty(true);\n            }\n\n            if (!imdbId) {\n              setImdbIdIsInvalid(true);\n            }\n          }}\n          onChange={(event) => {\n            setImdbIdIsInvalid(false);\n            setImdbId(event.target.value);\n          }}\n        />\n        {imdbIdIsDirty && imdbIdIsInvalid && <p className=\"add-movie__error\">Please enter an IMDB ID</p>}\n      </div>\n\n      <button\n        type=\"submit\"\n        disabled={titleIsInvalid\n          || imgUrlIsInvalid\n          || imdbIdIsInvalid\n          || imdbUrlIsInvalid}\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <h1 className=\"sidebar__title\">Add movie</h1>\n        <NewMovie\n          onAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}